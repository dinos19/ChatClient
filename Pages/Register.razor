@page "/"
@inject NavigationManager NavigationManager
@implements IDisposable
@inject RegisterViewModel viewModel
<h3>Register</h3>

@using System.ComponentModel.DataAnnotations
@using ChatClient.Infrastructure
@using ChatClient.Models
@using System.Text.Json
@using System.Text
@using ChatClient.Services
@using ChatClient.ViewModel

<EditForm Model="@viewModel.Account">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="username" class="form-control" @bind-Value="viewModel.Account.Name" />
        <ValidationMessage For="@(() => viewModel.Account.Name)" />
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="viewModel.Account.Email" InputType="InputType.Email" />
        <ValidationMessage For="@(() => viewModel.Account.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText @bind-Value="viewModel.Account.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => viewModel.Account.Password)" />
    </div>

    <button type="Register" class="btn btn-primary" @onclick="(() => viewModel.HandleRegistration.Execute(null))">Register</button>
    <button type="Login" class="btn btn-primary" @onclick="(() => viewModel.HandleLogin.Execute(null))">Login</button>

</EditForm>

@code {

    protected override async Task OnInitializedAsync()
    {
        //await viewModel.UserStateService.InitializeAsync();
        //viewModel.UserStateService.OnChange += StateHasChanged;
        viewModel.OnRegistrationSuccess += HandleRegistrationSuccess;
        viewModel.OnLoginSuccess += HandleRegistrationSuccess;

    }

    private void HandleRegistrationSuccess()
    {
        NavigationManager.NavigateTo("/home", false);
    }
    public void Dispose()
    {
        //viewModel.UserStateService.OnChange -= StateHasChanged;
        viewModel.OnRegistrationSuccess -= HandleRegistrationSuccess;
        viewModel.OnLoginSuccess -= HandleRegistrationSuccess;

    }
}